install nginx
	yum install
		create /etc/yum.repos.d/nginx.repo  #and write contents from nginx Centos

	
		yum install nginx # and verify GPG key

	Building nginx from Sources
		user configure command and parameters
			--help
			--prefix=path
			.......

		Example of parameters usage (all of this needs to be typed in one line):

			./configure
			    --sbin-path=/usr/local/nginx/nginx
			    --conf-path=/usr/local/nginx/nginx.conf
			    --pid-path=/usr/local/nginx/nginx.pid
			    --with-http_ssl_module
			    --with-pcre=../pcre-8.44
			    --with-zlib=../zlib-1.2.11
			After configuration, nginx is compiled and installed using make.

Beginner' s Guide
	nginx has one master process and several worker processes. The main purpose of the master process is to read and evaluate configuration, and maintain(维护) worker processes. Worker processes do actual processing of requests. nginx employs event-based model and OS-dependent mechanisms(事件驱动模型) to efficiently distribute(分发) requests among worker processes.


	start, stop and reload configureation
		To start nginx, run the executable file. Once nginx is started, it can be controlled by invoking the executable with the -s parameter. Use the following syntax:

		nginx -s signal
		Where signal may be one of the following:

		stop — fast shutdown
		quit — graceful shutdown
		reload — reloading the configuration file
		reopen — reopening the log files
		For example, to stop nginx processes with waiting for the worker processes to finish serving current requests, the following command can be executed:

		nginx -s quit

		Changes made in the configuration file will not be applied until the command to reload configuration is sent to nginx or it is restarted. To reload configuration, execute:

			nginx -s reload

			Once the master process receives the signal to reload configuration, it checks the syntax validity of the new configuration file and tries to apply the configuration provided in it. If this is a success, the master process starts new worker processes and sends messages to old worker processes, requesting them to shut down. Otherwise, the master process rolls back the changes and continues to work with the old configuration. Old worker processes, receiving a command to shut down, stop accepting new connections and continue to service current requests until all such requests are serviced. After that, the old worker processes exit.

		A signal may also be sent to nginx processes with the help of Unix tools such as the kill utility. In this case a signal is sent directly to a process with a given process ID. The process ID of the nginx master process is written, by default, to the nginx.pid in the directory /usr/local/nginx/logs or /var/run. For example, if the master process ID is 1628, to send the QUIT signal resulting in nginx’s graceful shutdown, execute:

			kill -s QUIT 1628